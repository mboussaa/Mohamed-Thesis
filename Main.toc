\contentsline {chapter}{R\'esum\'e en Fran\c {c}ais}{1}{chapter*.3}
\contentsline {section}{Contexte}{1}{section*.4}
\contentsline {section}{Motivations}{1}{section*.5}
\contentsline {section}{Probl\'ematique}{1}{section*.6}
\contentsline {section}{Contributions}{1}{section*.7}
\contentsline {chapter}{\numberline {1}Introduction}{3}{chapter.1}
\contentsline {section}{\numberline {1.1}Context}{3}{section.1.1}
\contentsline {section}{\numberline {1.2}Motivation}{4}{section.1.2}
\contentsline {section}{\numberline {1.3}Scope of the thesis}{6}{section.1.3}
\contentsline {section}{\numberline {1.4}Challenges}{7}{section.1.4}
\contentsline {section}{\numberline {1.5}Contributions}{9}{section.1.5}
\contentsline {section}{\numberline {1.6}Overview of this thesis}{10}{section.1.6}
\contentsline {section}{\numberline {1.7}Publications}{11}{section.1.7}
\contentsline {part}{I\hspace {1em}Background and State of the Art}{13}{part.1}
\contentsline {chapter}{\numberline {2}Background}{15}{chapter.2}
\contentsline {section}{\numberline {2.1}Diversity in software engineering}{16}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Software diversity}{16}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Hardware heterogeneity}{18}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Matching software diversity to heterogeneous hardware: the marriage}{20}{subsection.2.1.3}
\contentsline {section}{\numberline {2.2}From classical software development to generative programming}{23}{section.2.2}
\contentsline {section}{\numberline {2.3}An overview of the software development tool chain}{26}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}Automatic code generation}{26}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}Stakeholders and their roles for testing generators}{28}{subsection.2.3.2}
\contentsline {section}{\numberline {2.4}Testing code generators}{30}{section.2.4}
\contentsline {subsection}{\numberline {2.4.1}Testing workflow}{30}{subsection.2.4.1}
\contentsline {subsection}{\numberline {2.4.2}Types of code generators}{31}{subsection.2.4.2}
\contentsline {subsection}{\numberline {2.4.3}Why testing code generators is complex?}{33}{subsection.2.4.3}
\contentsline {section}{\numberline {2.5}Compilers auto-tuning}{35}{section.2.5}
\contentsline {subsection}{\numberline {2.5.1}Code optimizations}{35}{subsection.2.5.1}
\contentsline {subsection}{\numberline {2.5.2}Why compilers auto-tuning is complex?}{36}{subsection.2.5.2}
\contentsline {section}{\numberline {2.6}Summary: Testing and optimization challenges}{38}{section.2.6}
\contentsline {chapter}{\numberline {3}State of the art}{41}{chapter.3}
\contentsline {section}{\numberline {3.1}Testing code generators}{42}{section.3.1}
\contentsline {subsection}{\numberline {3.1.1}Testing functional properties}{42}{subsection.3.1.1}
\contentsline {subsection}{\numberline {3.1.2}Testing non-functional properties}{44}{subsection.3.1.2}
\contentsline {subsubsection}{\numberline {3.1.2.1}The oracle problem}{44}{subsubsection.3.1.2.1}
\contentsline {subsubsection}{\numberline {3.1.2.2}Summary: oracle definition approaches}{48}{subsubsection.3.1.2.2}
\contentsline {section}{\numberline {3.2}Compilers auto-tuning techniques}{48}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}Iterative compilation}{48}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}Implementation of iterative compilation system}{49}{subsection.3.2.2}
\contentsline {subsection}{\numberline {3.2.3}Iterative compilation search techniques}{51}{subsection.3.2.3}
\contentsline {subsubsection}{\numberline {3.2.3.1}Auto-tuning: a mono objective optimization}{51}{subsubsection.3.2.3.1}
\contentsline {subsubsection}{\numberline {3.2.3.2}Escaping local optimum}{52}{subsubsection.3.2.3.2}
\contentsline {subsubsection}{\numberline {3.2.3.3}Phase ordering problem}{54}{subsubsection.3.2.3.3}
\contentsline {subsubsection}{\numberline {3.2.3.4}Evaluating iterative optimization across multiple data sets}{55}{subsubsection.3.2.3.4}
\contentsline {subsubsection}{\numberline {3.2.3.5}Conflicting objectives: a multi-objective optimization}{56}{subsubsection.3.2.3.5}
\contentsline {subsubsection}{\numberline {3.2.3.6}Predicting optimizations: a machine learning optimization}{58}{subsubsection.3.2.3.6}
\contentsline {subsubsection}{\numberline {3.2.3.7}Summary: auto-tuning compiler techniques}{59}{subsubsection.3.2.3.7}
\contentsline {section}{\numberline {3.3}Container-based testing techniques}{59}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}Deployment and testing using Docker}{60}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}Runtime monitoring using Docker}{61}{subsection.3.3.2}
\contentsline {section}{\numberline {3.4}Summary \& limitations of the state-of-th-art}{63}{section.3.4}
\contentsline {part}{II\hspace {1em}Contributions}{65}{part.2}
\contentsline {chapter}{To the reader: summary of contributions}{67}{chapter*.8}
\contentsline {chapter}{\numberline {4}Automatic non-functional testing of code generators families}{71}{chapter.4}
\contentsline {section}{\numberline {4.1}Introduction}{72}{section.4.1}
\contentsline {section}{\numberline {4.2}Motivation}{74}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}Code Generator Families}{74}{subsection.4.2.1}
\contentsline {paragraph}{a. Haxe.}{74}{section*.9}
\contentsline {paragraph}{b. ThingML.}{74}{section*.10}
\contentsline {paragraph}{c. TypeScript.}{75}{section*.11}
\contentsline {subsection}{\numberline {4.2.2}Functional Correctness of a Code Generator Family}{75}{subsection.4.2.2}
\contentsline {subsection}{\numberline {4.2.3}Performance Evaluation of a Code Generator Family}{75}{subsection.4.2.3}
\contentsline {subsection}{\numberline {4.2.4}Performance Issues of a Code Generator Family}{76}{subsection.4.2.4}
\contentsline {section}{\numberline {4.3}Approach Overview}{77}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}Non-Functional Testing of a Code Generator Family: a Common Process}{77}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}An Infrastructure for Non-functional Testing Using System Containers}{78}{subsection.4.3.2}
\contentsline {subsection}{\numberline {4.3.3}Technical Implementation}{79}{subsection.4.3.3}
\contentsline {subsubsection}{\numberline {4.3.3.1}System Containers as Execution Platforms}{80}{subsubsection.4.3.3.1}
\contentsline {subsubsection}{\numberline {4.3.3.2}Runtime Testing Components}{81}{subsubsection.4.3.3.2}
\contentsline {paragraph}{Monitoring Component}{81}{section*.12}
\contentsline {paragraph}{Back-end Database Component}{82}{section*.13}
\contentsline {paragraph}{Front-end Visualization Component}{83}{section*.14}
\contentsline {section}{\numberline {4.4}Evaluation}{84}{section.4.4}
\contentsline {subsection}{\numberline {4.4.1}Experimental Setup}{84}{subsection.4.4.1}
\contentsline {subsubsection}{\numberline {4.4.1.1}Code Generators Under Test: Haxe Compilers}{84}{subsubsection.4.4.1.1}
\contentsline {subsubsection}{\numberline {4.4.1.2}Cross-platform Benchmark}{84}{subsubsection.4.4.1.2}
\contentsline {subsubsection}{\numberline {4.4.1.3}Evaluation Metrics Used}{86}{subsubsection.4.4.1.3}
\contentsline {subsubsection}{\numberline {4.4.1.4}Setting up Infrastructure}{86}{subsubsection.4.4.1.4}
\contentsline {subsection}{\numberline {4.4.2}Experimental Results}{88}{subsection.4.4.2}
\contentsline {subsubsection}{\numberline {4.4.2.1}Evaluation Using the Standard Deviation}{88}{subsubsection.4.4.2.1}
\contentsline {subsubsection}{\numberline {4.4.2.2}Analysis}{89}{subsubsection.4.4.2.2}
\contentsline {subsection}{\numberline {4.4.3}Threats to Validity}{90}{subsection.4.4.3}
\contentsline {section}{\numberline {4.5}Conclusion}{91}{section.4.5}
\contentsline {chapter}{\numberline {5}NOTICE: An approach for auto-tuning compilers}{95}{chapter.5}
\contentsline {section}{\numberline {5.1}Introduction}{97}{section.5.1}
\contentsline {section}{\numberline {5.2}Motivation}{99}{section.5.2}
\contentsline {subsection}{\numberline {5.2.1}Compiler Optimizations}{99}{subsection.5.2.1}
\contentsline {subsection}{\numberline {5.2.2}Example: GCC Compiler}{100}{subsection.5.2.2}
\contentsline {section}{\numberline {5.3}Evolutionary Exploration of Compiler Optimizations }{102}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}Novelty Search Adaptation}{102}{subsection.5.3.1}
\contentsline {subsubsection}{\numberline {5.3.1.1}Optimization Sequence Representation}{104}{subsubsection.5.3.1.1}
\contentsline {subsubsection}{\numberline {5.3.1.2}Novelty Metric}{104}{subsubsection.5.3.1.2}
\contentsline {subsection}{\numberline {5.3.2}Novelty Search For Multi-objective Optimization}{105}{subsection.5.3.2}
\contentsline {section}{\numberline {5.4}Evaluation}{106}{section.5.4}
\contentsline {subsection}{\numberline {5.4.1}Research Questions}{106}{subsection.5.4.1}
\contentsline {subsection}{\numberline {5.4.2}Experimental Setup}{107}{subsection.5.4.2}
\contentsline {subsubsection}{\numberline {5.4.2.1}Programs Used in the Empirical Study}{107}{subsubsection.5.4.2.1}
\contentsline {subsubsection}{\numberline {5.4.2.2}Parameters Tuning}{108}{subsubsection.5.4.2.2}
\contentsline {subsubsection}{\numberline {5.4.2.3}Evaluation Metrics Used}{109}{subsubsection.5.4.2.3}
\contentsline {subsubsection}{\numberline {5.4.2.4}Setting up Infrastructure}{110}{subsubsection.5.4.2.4}
\contentsline {subsection}{\numberline {5.4.3}Experimental Methodology and Results}{110}{subsection.5.4.3}
\contentsline {subsubsection}{\numberline {5.4.3.1}RQ1. Mono-objective SBSE Validation}{110}{subsubsection.5.4.3.1}
\contentsline {paragraph}{Method}{110}{section*.15}
\contentsline {paragraph}{Results}{112}{table.5.4}
\contentsline {subsubsection}{\numberline {5.4.3.2}RQ2. Sensitivity}{113}{subsubsection.5.4.3.2}
\contentsline {paragraph}{Method}{113}{section*.17}
\contentsline {paragraph}{Results}{113}{section*.18}
\contentsline {subsubsection}{\numberline {5.4.3.3}RQ3. Impact of optimizations on resource usage}{114}{subsubsection.5.4.3.3}
\contentsline {paragraph}{Method 1}{115}{section*.19}
\contentsline {paragraph}{Results 1}{115}{section*.20}
\contentsline {paragraph}{Method 2}{115}{section*.21}
\contentsline {paragraph}{Results 2}{116}{figure.5.7}
\contentsline {subsubsection}{\numberline {5.4.3.4}RQ4. Trade-offs between non-functional properties}{118}{subsubsection.5.4.3.4}
\contentsline {paragraph}{Method}{118}{section*.23}
\contentsline {paragraph}{Results}{119}{section*.24}
\contentsline {subsection}{\numberline {5.4.4}Discussions}{121}{subsection.5.4.4}
\contentsline {subsection}{\numberline {5.4.5}Threats to Validity}{122}{subsection.5.4.5}
\contentsline {subsection}{\numberline {5.4.6}Tool Support Overview}{122}{subsection.5.4.6}
\contentsline {section}{\numberline {5.5}Conclusion}{124}{section.5.5}
\contentsline {chapter}{\numberline {6}An infrastructure for resource monitoring based on system containers}{127}{chapter.6}
\contentsline {section}{\numberline {6.1}Introduction}{127}{section.6.1}
\contentsline {section}{\numberline {6.2}System Containers as Execution Platforms}{127}{section.6.2}
\contentsline {section}{\numberline {6.3}Runtime Testing Components}{129}{section.6.3}
\contentsline {subsection}{\numberline {6.3.1}Monitoring Component}{129}{subsection.6.3.1}
\contentsline {subsection}{\numberline {6.3.2}Back-end Database Component}{130}{subsection.6.3.2}
\contentsline {subsection}{\numberline {6.3.3}Front-end Visualization Component}{131}{subsection.6.3.3}
\contentsline {part}{III\hspace {1em}Conclusion and perspectives}{133}{part.3}
\contentsline {chapter}{\numberline {7}Conclusion and perspectives}{135}{chapter.7}
\contentsline {section}{\numberline {7.1}Summary of contributions}{135}{section.7.1}
\contentsline {section}{\numberline {7.2}Perspectives}{135}{section.7.2}
\contentsline {chapter}{\textbf {References}}{137}{section*.25}
\contentsline {chapter}{List of Figures}{153}{section*.27}
\contentsline {chapter}{List of Tables}{155}{section*.29}
