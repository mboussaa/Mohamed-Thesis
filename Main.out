\BOOKMARK [0][-]{Doc-Start}{Contents}{}% 1
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 2
\BOOKMARK [1][-]{section.1.1}{Context}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{Challenges}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.3}{Contributions}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.4}{Overview of this thesis}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.5}{Publications}{chapter.1}% 7
\BOOKMARK [-1][-]{part.1}{I Background and State of the Art}{}% 8
\BOOKMARK [0][-]{chapter.2}{Background}{part.1}% 9
\BOOKMARK [1][-]{section.2.1}{From classical software development to generative programming}{chapter.2}% 10
\BOOKMARK [1][-]{section.2.2}{An overview of the software development tool chain}{chapter.2}% 11
\BOOKMARK [1][-]{section.2.3}{Code generators}{chapter.2}% 12
\BOOKMARK [2][-]{subsection.2.3.1}{Complexity}{section.2.3}% 13
\BOOKMARK [2][-]{subsection.2.3.2}{Software-platform heterogeneity}{section.2.3}% 14
\BOOKMARK [1][-]{section.2.4}{Compilers}{chapter.2}% 15
\BOOKMARK [2][-]{subsection.2.4.1}{Complexity}{section.2.4}% 16
\BOOKMARK [2][-]{subsection.2.4.2}{Hardware-platform heterogeneity}{section.2.4}% 17
\BOOKMARK [1][-]{section.2.5}{Problems that still remain}{chapter.2}% 18
\BOOKMARK [0][-]{chapter.3}{State of the art}{part.1}% 19
\BOOKMARK [1][-]{section.3.1}{Compilers}{chapter.3}% 20
\BOOKMARK [1][-]{section.3.2}{Compiler optimizations}{chapter.3}% 21
\BOOKMARK [1][-]{section.3.3}{Iterative compilation}{chapter.3}% 22
\BOOKMARK [2][-]{subsection.3.3.1}{Implementation of Iterative Compilation System}{section.3.3}% 23
\BOOKMARK [1][-]{section.3.4}{Functional requirements}{chapter.3}% 24
\BOOKMARK [1][-]{section.3.5}{Testing compilers}{chapter.3}% 25
\BOOKMARK [1][-]{section.3.6}{Testing code generators}{chapter.3}% 26
\BOOKMARK [-1][-]{part.2}{II Contributions}{}% 27
\BOOKMARK [0][-]{chapter.4}{Automatic compiler auto-tuning}{part.2}% 28
\BOOKMARK [1][-]{section.4.1}{Introduction}{chapter.4}% 29
\BOOKMARK [1][-]{section.4.2}{Motivation}{chapter.4}% 30
\BOOKMARK [2][-]{subsection.4.2.1}{Compiler Optimizations}{section.4.2}% 31
\BOOKMARK [2][-]{subsection.4.2.2}{Example: GCC Compiler}{section.4.2}% 32
\BOOKMARK [1][-]{section.4.3}{Evolutionary Exploration of Compiler Optimizations }{chapter.4}% 33
\BOOKMARK [2][-]{subsection.4.3.1}{Novelty Search Adaptation}{section.4.3}% 34
\BOOKMARK [2][-]{subsection.4.3.2}{Novelty Search For Multi-objective Optimization}{section.4.3}% 35
\BOOKMARK [1][-]{section.4.4}{Evaluation}{chapter.4}% 36
\BOOKMARK [2][-]{subsection.4.4.1}{Research Questions}{section.4.4}% 37
\BOOKMARK [2][-]{subsection.4.4.2}{Experimental Setup}{section.4.4}% 38
\BOOKMARK [2][-]{subsection.4.4.3}{Experimental Methodology and Results}{section.4.4}% 39
\BOOKMARK [2][-]{subsection.4.4.4}{Discussions}{section.4.4}% 40
\BOOKMARK [2][-]{subsection.4.4.5}{Threats to Validity}{section.4.4}% 41
\BOOKMARK [2][-]{subsection.4.4.6}{Tool Support}{section.4.4}% 42
\BOOKMARK [1][-]{section.4.5}{Conclusion and Future Work}{chapter.4}% 43
\BOOKMARK [0][-]{chapter.5}{Automatic non-functional testing of code generators families}{part.2}% 44
\BOOKMARK [1][-]{section.5.1}{Introduction}{chapter.5}% 45
\BOOKMARK [1][-]{section.5.2}{Motivation}{chapter.5}% 46
\BOOKMARK [2][-]{subsection.5.2.1}{Code Generator Families}{section.5.2}% 47
\BOOKMARK [2][-]{subsection.5.2.2}{Functional Correctness of a Code Generator Family}{section.5.2}% 48
\BOOKMARK [2][-]{subsection.5.2.3}{Performance Evaluation of a Code Generator Family}{section.5.2}% 49
\BOOKMARK [1][-]{section.5.3}{Approach Overview}{chapter.5}% 50
\BOOKMARK [2][-]{subsection.5.3.1}{Non-Functional Testing of a Code Generator Family: a Common Process}{section.5.3}% 51
\BOOKMARK [2][-]{subsection.5.3.2}{An Infrastructure for Non-functional Testing Using System Containers}{section.5.3}% 52
\BOOKMARK [1][-]{section.5.4}{Evaluation}{chapter.5}% 53
\BOOKMARK [2][-]{subsection.5.4.1}{Experimental Setup}{section.5.4}% 54
\BOOKMARK [2][-]{subsection.5.4.2}{Experimental Results}{section.5.4}% 55
\BOOKMARK [2][-]{subsection.5.4.3}{Threats to Validity}{section.5.4}% 56
\BOOKMARK [0][-]{chapter.6}{An infrastructure for resource monitoring based on system containers}{part.2}% 57
\BOOKMARK [1][-]{section.6.1}{Introduction}{chapter.6}% 58
\BOOKMARK [1][-]{section.6.2}{System Containers as Execution Platforms}{chapter.6}% 59
\BOOKMARK [1][-]{section.6.3}{Runtime Testing Components}{chapter.6}% 60
\BOOKMARK [2][-]{subsection.6.3.1}{Monitoring Component}{section.6.3}% 61
\BOOKMARK [2][-]{subsection.6.3.2}{Back-end Database Component}{section.6.3}% 62
\BOOKMARK [2][-]{subsection.6.3.3}{Front-end Visualization Component}{section.6.3}% 63
\BOOKMARK [-1][-]{part.3}{III Conclusion and perspectives}{}% 64
\BOOKMARK [0][-]{chapter.7}{Conclusion and perspectives}{part.3}% 65
\BOOKMARK [1][-]{section.7.1}{Summary of contributions}{chapter.7}% 66
\BOOKMARK [1][-]{section.7.2}{Perspectives}{chapter.7}% 67
\BOOKMARK [0][-]{section*.32}{References}{part.3}% 68
